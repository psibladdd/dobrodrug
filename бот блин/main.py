import logging
import sqlite3
from datetime import datetime, timedelta
import time
import random

#import asyncio
#import schedule
import random

from telegram import *
from telegram.ext import *
import json

logging.basicConfig(level=logging.INFO)

SELECT_USER, ENTER_BALANCE, SEND_MESSAGE = range(3)
TOKEN = '7491056485:AAEOEEi60LJCv6lj1meW7Gika0nRmSuh1vM'
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()
pending_messages = {}

message_id_counter = 0
lood_flag = True
cursor.execute('CREATE TABLE IF NOT EXISTS users ( ID INTEGER PRIMARY KEY, name TEXT, balance INTEGER, username TEXT)')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text='–ò –∑–∞—á–µ–º –≤—Å–µ —ç—Ç–æ...)', message_thread_id=12)

async def handle_dice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global lood_flag
    if not lood_flag:
        await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=update.message.message_id)
        return

    dice = update.message.dice

    if(update.message.from_user.username == None): user_name = update.message.from_user.name
    else: user_name = "@" + update.message.from_user.username
    user_id = update.message.from_user.id
    cursor.execute('SELECT balance FROM users WHERE id = ?', (user_id,))
    current_balance = cursor.fetchone()[0]
    cursor.execute('SELECT id FROM users WHERE id = ?', (user_id,))
    existing_user = cursor.fetchone()

    mess = ''
    if not existing_user:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.',
                                       message_thread_id=12)
        return

    if (update.message.message_thread_id == 12 and lood_flag == True):
        if current_balance <= 0:
            await context.bot.send_message(chat_id=update.effective_chat.id,
                                           text=f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –∏–≥—Ä—ã. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance}',
                                           message_thread_id=12)
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=update.message.message_id)
            return
        time.sleep(2)
        if dice.emoji == 'üé≤':  # –ö—É–±–∏–∫
            if dice.value == 1:
                new_balance = current_balance - 20
                if (new_balance < 0): new_balance = 0
                mess = f'–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ù–ï–£–î–ê–ß–ê ‚ùóÔ∏èüò´ \n {user_name} —Ç–µ—Ä—è–µ—Ç 20 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 2:
                new_balance = current_balance + 2
                mess = f'–ù–µ–ø–ª–æ—Ö–æ–π –±—Ä–æ—Å–æ–∫. \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 2 –æ—á–∫–∞! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 3:
                new_balance = current_balance + 4
                mess = f'–û—Ç–ª–∏—á–Ω—ã–π –±—Ä–æ—Å–æ–∫. \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 4 –æ—á–∫–∞! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 4:
                new_balance = current_balance + 6
                mess = f'–ú–∞—Å—Ç–µ—Ä—Å–∫–∏–π –±—Ä–æ—Å–æ–∫. \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 6 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 5:
                new_balance = current_balance + 8
                mess = f'–û—Ñ–∏–≥–µ–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫! \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 8 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 6:
                new_balance = current_balance + 15
                mess = f'–ß–¢–û –û–ù –¢–í–û–†–ò–¢ ü§Ø!!?? \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id,reply_to_message_id=update.message.message_id,
                                           text=mess,
                                           message_thread_id=12)

        elif dice.emoji == 'üé≥':  # –ö—É–±–∏–∫
            if dice.value == 1:
                new_balance = current_balance - 20
                if (new_balance < 0): new_balance = 0
                mess = f'–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ù–ï–£–î–ê–ß–ê ‚ùóÔ∏èüò´  \n {user_name} —Ç–µ—Ä—è–µ—Ç 20 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 2:
                new_balance = current_balance + 1
                mess = f'–ò —ç—Ç–æ –≤—Å—ë –Ω–∞ —á—Ç–æ —Ç—ã —Å–ø–æ—Å–æ–±–µ–Ω ?ü§® \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 1 –æ—á–∫–æ! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 3:
                new_balance = current_balance + 3
                mess = f'–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ –ø–ª–æ—Ö–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º üëÄ \n{user_name} –ø–æ–ª—É—á–∞–µ—Ç 3 –æ—á–∫–∞! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 4:
                new_balance = current_balance + 5
                mess = f'–ë—ã–ª–æ –±–ª–∏–∑–∫–æüíÖ  \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 5 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 5:
                new_balance = current_balance + 7
                mess = f'–¢–ê–ö –ë–õ–ò–ó–ö–û ü•π \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 7 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 6:
                new_balance = current_balance + 15
                mess = f'–°–¢–†–ê–ê–ê–ô–ö üëä \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id, text=mess,reply_to_message_id=update.message.message_id,
                                           message_thread_id=12)
        elif dice.emoji == 'üéØ':  # –ö—É–±–∏–∫
            if dice.value == 1:
                new_balance = current_balance - 15
                if (new_balance < 0): new_balance = 0
                mess = f'–ú–¥–∞–∞... –º–µ—Ç–∫–æ—Å—Ç—å - –Ω–µ —Ç–≤–æ—ë \n {user_name} —Ç–µ—Ä—è–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 2:
                new_balance = current_balance + 1
                mess = f'–ù—É.. –•–æ—Ç—è –±—ã –ø–æ–ø–∞–ª  \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 1 –æ—á–∫–æ! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 3:
                new_balance = current_balance + 3
                mess = f'–£–∂–µ –ª—É—á—à–µ! –ü—Ä–æ–±—É–π –µ—â–µ! \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 3 –æ—á–∫–∞! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 4:
                new_balance = current_balance + 5
                mess = f'–ù–æ—Ä–º–∞–ª—å–Ω–æ.. –°—Ç–∞–±–∏–ª—å–Ω–æ.. \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 5 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 5:
                new_balance = current_balance + 7
                mess = f'–≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 7 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 6:
                new_balance = current_balance + 15
                mess = f'–í —è–±–ª–æ—á–∫–æ üçé  \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id,reply_to_message_id=update.message.message_id,
                                           text=mess,
                                           message_thread_id=12)

        elif dice.emoji == 'üèÄ':  # –ö—É–±–∏–∫
            if dice.value > 3:
                new_balance = current_balance + 15
                mess = f'–¢–µ–±–µ –∑–∞–≤–∏–¥—É–µ—Ç –¥–∞–∂–µ –î–∂–æ—Ä–¥–∞–Ω üòç \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value < 4:
                new_balance = current_balance - 20
                if (new_balance < 0): new_balance = 0
                mess = f'–í—Å—Ç–∞–Ω—å –ø–æ–±–ª–∏–∂–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ \n {user_name} —Ç–µ—Ä—è–µ—Ç 20 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id, reply_to_message_id=update.message.message_id,text=mess,
                                           message_thread_id=12)

        elif dice.emoji == '‚öΩ':  # –ö—É–±–∏–∫
            if dice.value > 2:
                new_balance = current_balance + 15
                mess = f'–®–∏–∏–∏–∏–∏—à. –û—Ç–ª–∏—á–Ω—ã–π —É–¥–∞—Äü•≥ \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 15 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value < 3:
                new_balance = current_balance - 20
                if (new_balance < 0): new_balance = 0
                mess = f'–¢—ã –∫–∞–∫ –î–∞–Ω—Ç–µ—Å! –ö–æ—Å–∏—à—å –Ω–∞ –æ–±–∞ –≥–ª–∞–∑–∞? \n {user_name} —Ç–µ—Ä—è–µ—Ç 20 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id,reply_to_message_id=update.message.message_id, text=mess,
                                           message_thread_id=12)

        elif dice.emoji == 'üé∞':  # –ö—É–±–∏–∫
            if dice.value == 24 or dice.value == 25 or dice.value == 23 or dice.value == 18 or dice.value == 6 or dice.value == 26 or dice.value == 30 or dice.value == 38 or dice.value == 54:
                new_balance = current_balance + 5
                mess = f'–ö–∞–∫ –≤–∫—É—Å–Ω–æ... \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 5 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 21 or dice.value == 35 or dice.value == 44 or dice.value == 27 or dice.value == 11 or dice.value == 47 or dice.value == 39 or dice.value == 42 or dice.value == 59 or dice.value == 41:
                new_balance = current_balance + 7
                mess = f'–ê —Ç–µ–ø–µ—Ä—å —É–∂–µ –∫–∏—Å–ª–µ–Ω—å–∫–æ... –ó–∞—Ç–æ –≤—ã–π–≥—Ä–∞–ª! \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 7 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 17 or dice.value == 13 or dice.value == 3 or dice.value == 4 or dice.value == 9 or dice.value == 5 or dice.value == 2 or dice.value == 49 or dice.value == 33:
                new_balance = current_balance + 3
                mess = f'–í–û–£! –≠—Ç–æ —É–∂–µ –ø—Ä–∏—è—Ç–Ω–æ! \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 3 –æ—á–∫–∞! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            elif dice.value == 16 or dice.value == 63 or dice.value == 56 or dice.value == 52 or dice.value == 48 or dice.value == 61 or dice.value == 62 or dice.value == 60:
                new_balance = current_balance + 10
                mess = f'–ê–ê–ê–ê–ê–ê –¢–ê–ö –ë–õ–ò–ó–ö–û \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 10 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            elif dice.value == 1 or dice.value == 22 or dice.value == 43 or dice.value == 64:
                new_balance = current_balance + 50
                mess = f'–î–∂–µ–∫–ø–æ—Ç! –£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üí∏ \n {user_name} –ø–æ–ª—É—á–∞–µ—Ç 50 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'
            else:
                new_balance = current_balance - 20
                if (new_balance < 0): new_balance = 0
                mess = f'–£–¥–∞—á–∞ –ø–æ–∫–∏–Ω—É–ª–∞ —Ç–µ–±—è üòî \n {user_name} —Ç–µ—Ä—è–µ—Ç 20 –æ—á–∫–æ–≤! \n –ë–∞–ª–∞–Ω—Å {user_name}: {new_balance}'

            cursor.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
            conn.commit()
            await context.bot.send_message(chat_id=update.effective_chat.id,reply_to_message_id=update.message.message_id, text=mess,
                                           message_thread_id=12)
    else:
        await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=update.message.message_id)
        return

async def register(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    first_name = update.message.from_user.name

    cursor.execute('SELECT ID FROM users WHERE ID = ?', (user_id,))
    existing_user = cursor.fetchone()

    if existing_user:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.',
                                       message_thread_id=12)
    else:
        if update.message.from_user.username is None:
            user_name = first_name
            cursor.execute('INSERT INTO users (ID, name, balance, username) VALUES (?, ?, ?, ?)',
                           (user_id, first_name, 1500, user_name))
        else:
            user_name ="@" + update.message.from_user.username
            cursor.execute('INSERT INTO users (ID, name, balance, username) VALUES (?, ?, ?, ?)',
                        (user_id, first_name, 1500, user_name))
        conn.commit()
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!',
                                       message_thread_id=12)

def get_top_users():
    cursor.execute('SELECT username, balance FROM users ORDER BY balance DESC LIMIT 10')
    top_users = cursor.fetchall()
    return top_users


async def send_top_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    top_users = get_top_users()
    print("—Ö—É–π")
    message = "–¢–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –æ—á–∫–∞–º:\n"
    for i, (username, balance) in enumerate(top_users, start=1):
        message += f"{i}. {username}: {balance}\n"
    await context.bot.send_message(chat_id=update.effective_chat.id, text=message, message_thread_id=12)

async def daily_reward(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if (update.message.from_user.username == None):
        user_name = update.message.from_user.name
    else:
        user_name = "@" + update.message.from_user.username


    cursor.execute('SELECT ID, last_reward_time FROM users WHERE ID = ?', (user_id,))
    user_data = cursor.fetchone()

    if not user_data:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.', message_thread_id=12)
        return

    last_reward_time_str = user_data[1]
    last_reward_time = datetime.strptime(last_reward_time_str, '%Y-%m-%d %H:%M:%S') if last_reward_time_str else None


    if last_reward_time and datetime.now() - last_reward_time < timedelta(days=1):
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±—É—Å—Ç —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞.', message_thread_id=12)
        return

    reward_amount = random.randint(100,500)
    cursor.execute('UPDATE users SET balance = balance + ?, last_reward_time = ? WHERE ID = ?', (reward_amount, datetime.now().strftime('%Y-%m-%d %H:%M:%S'), user_id))
    conn.commit()

    await context.bot.send_message(chat_id=update.effective_chat.id, text=f'–ë—É—Å—Ç –¥–ª—è {user_name} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è {reward_amount} –æ—á–∫–æ–≤', message_thread_id=12)

async def balance(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    print(update.effective_chat.id)
    if update.effective_chat.type != Chat.PRIVATE:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.', message_thread_id=12)
        return

    user_name = update.message.from_user.username
    if user_name not in ['hlebnastole', 'why_dyrachyo', 'sdmfy']:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ')
        return

    args = context.args
    if len(args) != 2:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /balance "username" "—á–∏—Å–ª–æ"')
        return

    target_username = args[0]
    try:
        amount = int(args[1])
    except ValueError:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.')
        return

    cursor.execute('SELECT username FROM users WHERE username = ?', (target_username,))
    existing_user = cursor.fetchone()

    if not existing_user:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
        return

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('UPDATE users SET balance = balance + ? WHERE username = ?', (amount, target_username))
    conn.commit()
    cursor.execute('SELECT balance FROM users WHERE username = ?', (target_username,))
    conn.commit()
    bal = cursor.fetchone()[0]
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text=f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_username} —Ç–µ–ø–µ—Ä—å {bal}.')

async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.effective_chat.type != Chat.PRIVATE:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.', message_thread_id=12)
        return

    user_name = update.message.from_user.username
    if user_name not in ['hlebnastole', 'why_dyrachyo', 'sdmfy']:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
        return
    args = context.args
    message_text = ' '.join(args)
    target_chat_id = '-1002171062047'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ü–µ–ª–µ–≤–æ–≥–æ —á–∞—Ç–∞

    await context.bot.send_message(chat_id=target_chat_id, text=message_text, message_thread_id=12)
    await context.bot.send_message(chat_id=update.effective_chat.id, text='–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.')

quiz_word = None
quiz_points = None
#schedule.every().day.at("23:10").do(send_top_users)

quizzes = {}

async def quiz(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global quizzes

    if update.effective_chat.type != Chat.PRIVATE:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.', message_thread_id=12)
        return

    user_name = update.message.from_user.username
    if user_name not in ['hlebnastole', 'why_dyrachyo', 'sdmfy']:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
        return

    args = context.args
    if len(args) != 2:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /quiz "—Å–ª–æ–≤–æ" "—á–∏—Å–ª–æ"')
        return

    word = args[0]
    points = args[1]

    quiz_id = len(quizzes) + 1  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–≤–∏–∑–∞
    quizzes[quiz_id] = {'word': word.lower(), 'points': points}

    await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö–≤–∏–∑ –Ω–∞—á–∞—Ç —Å —Å–ª–æ–≤–æ–º '{word}' –∏ {points} –±–∞–ª–ª–∞–º–∏. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–≤–∏–∑–∞: {quiz_id}")

async def check_answer(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global quizzes

    if not quizzes:
        return

    user_answer = update.message.text.lower()

    for quiz_id, quiz_info in list(quizzes.items()):
        if user_answer == quiz_info['word']:
            user_id = update.message.from_user.id
            if (update.message.from_user.username == None):
                user_name = update.message.from_user.name
            else:
                user_name = "@" + update.message.from_user.username

            cursor.execute('UPDATE users SET balance = balance + ? WHERE id = ?', (quiz_info['points'], user_id))
            conn.commit()

            await context.bot.send_message(chat_id="-1002171062047", text=f"@{user_name} —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ –∏ –ø–æ–ª—É—á–∞–µ—Ç {quiz_info['points']} –æ—á–∫–æ–≤.", reply_to_message_id=update.message.message_id, message_thread_id=12)

            # –£–¥–∞–ª–µ–Ω–∏–µ –∫–≤–∏–∑–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
            del quizzes[quiz_id]

async def lood(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global lood_flag
    if update.effective_chat.type != Chat.PRIVATE:
        await context.bot.send_message(chat_id=update.effective_chat.id,
                                       text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.', message_thread_id=12)
        return

    user_name = update.message.from_user.username
    if user_name not in ['hlebnastole', 'why_dyrachyo', 'sdmfy']:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
        return

    if (context.args[0] == 'Y'):
        lood_flag = True
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–õ—É–¥–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞')
    elif (context.args[0] == 'N'):
        lood_flag = False
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–õ—É–¥–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞')
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥—ã Y/N')


async def good_morning(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if (update.message.from_user.username == None):
        user_name = update.message.from_user.name
    else:
        user_name = "@" + update.message.from_user.username
    print("ne dobroe")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    cursor.execute('SELECT ID FROM users WHERE ID = ?', (user_id,))
    existing_user = cursor.fetchone()

    if not existing_user:
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.', message_thread_id=12)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    current_time = datetime.now().time()
    print(current_time.hour)
    await context.bot.send_message(chat_id=update.effective_chat.id, text='–°–ª–∏—à–∫–æ–º –ø–æ–∑–¥–Ω–æ –¥–ª—è –¥–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞!', message_thread_id=12)
    return

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    reward_amount = 100  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç
    cursor.execute('UPDATE users SET balance = balance + ? WHERE ID = ?', (reward_amount, user_id))
    conn.commit()

    await context.bot.send_message(chat_id=update.effective_chat.id, text=f'–ó–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –¥–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞ {user_name} –ø–æ–ª—É—á–∞–µ—Ç +100 –æ—á–∫–æ–≤.', message_thread_id=12)
async def send_anonymous_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global message_id_counter
    if update.effective_chat.type == Chat.PRIVATE:
        user_id = update.message.from_user.id
        message_text = update.message.text

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_id_counter += 1
        message_id = message_id_counter

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏
        pending_messages[message_id] = {'user_id': user_id, 'text': message_text}

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        admin_chat_id = '1432989775'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        keyboard = [
            [InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data=f"approve_{message_id}")],
            [InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{message_id}")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=admin_chat_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–Ω–æ–Ω–∏–º–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message_text}", reply_markup=reply_markup)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    query.answer()

    action, message_id = query.data.split('_')
    message_id = int(message_id)

    if message_id not in pending_messages:
        await context.bot.send_message(chat_id=query.message.chat_id, text="–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    if action == 'approve':
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        message_text = pending_messages[message_id]['text']
        await context.bot.send_message(chat_id="-1002171062047", text=message_text, message_thread_id=16)
        await context.bot.send_message(chat_id=query.message.chat_id, text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç.")
    elif action == 'reject':
        # –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await context.bot.send_message(chat_id=query.message.chat_id, text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(MessageHandler(filters.Dice.ALL, handle_dice))
    application.add_handler(CommandHandler('register', register))
    application.add_handler(CommandHandler('balance', balance))
    application.add_handler(CommandHandler('write', send_message))
    application.add_handler(CommandHandler('quiz', quiz))
    application.add_handler(CommandHandler('lood', lood))
    application.add_handler(CommandHandler('top', send_top_users))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex('^üöÄ$'), daily_reward))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, send_anonymous_message))
    application.add_handler(CallbackQueryHandler(button_callback))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_answer))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex('^—É—Ç—Ä–æ$'), good_morning))
    application.run_polling()

if __name__ == '__main__':
    main()
